CARGA DE ELEMENTOS

La idea de la carga de elementos de la aplicación se basa en crear celdas para cada una de las celdas virtuales de las imágenes del tablero. Para ello, se le da un estilo de grid al tablero de 10 filas y 10 columnas para generar 100 grillas. Cada una de ellas va a ser una celda que va a tener un hijo, que en este caso es la munición. A cada una de ellas se les traslada fuera del escenario y se les da display: none para generar un efecto de bombardeo desde fuera. Una vez creadas todas las celdas, vamos a generar posiciones aleatorias para colocar barcos, manejando que no se choquen unos con otros. Les damos una clase para poder identificarlas con respecto a las otras. Una vez hecho esto, agrupamos mediante una función los grid area que formarían cada barco en un array. Después de ello, vamos a guardar todas las celdas en un fragment y las borramos del tablero. Ahora ponemos las imágenes de los barcos y les damos los grid area que tenemos almacenados. Luego volvemos a poner todas las celdas encima de los barcos para tener una celda por cada grilla del grid. Les borramos la clase y almacenamos los ID de estas en un array, a modo de mapa pero marcados con un punto al principio para identificarlos como barcos sin que se tenga acceso a esta información mediante la consola.

LOGICA

Para la lógica, hemos optado por generar un disparo aleatorio hasta que se encuentre un barco. Cuando se encuentre uno, vamos a generar un array de posiciones válidas alrededor de este y vamos a agotar esas posibilidades hasta que se encuentre otra posición de barco. El array se volverá a regenerar siempre que se encuentre una posición nueva. Cuando ya no haya posiciones, se volverá a la primera posición del barco para ir en la otra dirección y se agotarán todas las posibilidades del array cuando se llegue al final. Cuando este array de la otra dirección se acabe sin encontrar nueva posición de barco, se generará una posición aleatoria en busca de un barco nuevo.

POSD: Sé que la lógica implica que, una vez que se encuentre un barco, se detecte una dirección y se vaya en busca de uno nuevo cuando los dos límites de las direcciones se hayan encontrado. Sin embargo, observé que muchas veces salen barcos pegados unos a otros y esta razón hace que la máquina sea más rápida en derribar los barcos para hacer el juego más difícil y entretenido.
